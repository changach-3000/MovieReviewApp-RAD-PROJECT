{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Development/MovieReviewApp/frontend/src/context/MovieContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\nexport function MovieProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const nav = useNavigate();\n  const [movies, setMovies] = useState('');\n  const [selectedMovies, setSelectedMovies] = useState([]);\n  const [watchlist, setWatchlist] = useState();\n  const [onChange, setonChange] = useState();\n  const Addtowatchlist = movie => {\n    setSelectedMovies([...selectedMovies, movie]);\n    const newwatchlist = watchlist ? watchlist.filter(b => b.id !== movie.id) : [];\n    setWatchlist([...newwatchlist, movie]);\n  };\n  const removefromwatchlist = movie => {\n    const newSelectedMovies = selectedMovies.filter(f => f.id !== movie.id);\n    setSelectedMovies(newSelectedMovies);\n    const newwatchlist = watchlist.filter(b => b.id !== movie.id);\n    setWatchlist(newwatchlist);\n  };\n  useEffect(() => {\n    fetch(\"/api/movies\").then(res => res.json()).then(data => {\n      setMovies(data);\n    });\n  }, []);\n\n  // Add Food \n  const AddMovie = (backgroundImg, cardImg, description, subTitle, title, titleImg, type) => {\n    fetch(\"/api/mo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        backgroundImg,\n        cardImg,\n        description,\n        subTitle,\n        title,\n        titleImg,\n        type\n      })\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n      if (response.error) {\n        Swal.fire('Error', response.error, 'error');\n      } else if (response.success) {\n        nav(\"/home\");\n        Swal.fire('Success', response.success, 'success');\n        setonChange(!onChange);\n      } else {\n        Swal.fire('Error', \"Something went wrong\", 'error');\n      }\n    });\n  };\n\n  // Delete Food\n  const deleteMovie = id => {\n    fetch(`/api/foods/${id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        nav(\"/home\");\n        Swal.fire('Success', response.success, 'success');\n        setonChange(!onChange);\n      } else {\n        Swal.fire('Error', \"Something went wrong\", 'error');\n      }\n    });\n  };\n  const contextData = {\n    movies,\n    selectedMovies,\n    Addtowatchlist,\n    removefromwatchlist,\n    AddMovie,\n    deleteMovie\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n      value: contextData,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieProvider, \"DPc6HD37Tsp0bp7tu+xniKrqaOc=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useNavigate","Swal","jsxDEV","_jsxDEV","MovieContext","MovieProvider","_ref","_s","children","nav","movies","setMovies","selectedMovies","setSelectedMovies","watchlist","setWatchlist","onChange","setonChange","Addtowatchlist","movie","newwatchlist","filter","b","id","removefromwatchlist","newSelectedMovies","f","fetch","then","res","json","data","AddMovie","backgroundImg","cardImg","description","subTitle","title","titleImg","type","method","headers","body","JSON","stringify","response","console","log","error","fire","success","deleteMovie","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Development/MovieReviewApp/frontend/src/context/MovieContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState} from \"react\"\nimport { useNavigate } from \"react-router\"\nimport  Swal from \"sweetalert2\"\nexport const MovieContext= createContext()\n\nexport function MovieProvider({children}){\n  const nav = useNavigate()\n  const [movies , setMovies] = useState('')\n  const [selectedMovies, setSelectedMovies] = useState([]);\n  const [watchlist, setWatchlist] = useState()\n  const [onChange,setonChange] = useState()\n\n  const Addtowatchlist= (movie) => {\n    setSelectedMovies([...selectedMovies, movie]);\n    const newwatchlist = watchlist ? watchlist.filter((b) => b.id !== movie.id): [];\n    setWatchlist([...newwatchlist, movie]);\n  };\n\n  const removefromwatchlist = (movie) => {\n    const newSelectedMovies = selectedMovies.filter((f) => f.id !== movie.id);\n    setSelectedMovies(newSelectedMovies);\n\n    const newwatchlist = watchlist.filter((b) => b.id !== movie.id);\n    setWatchlist(newwatchlist);\n  };\n\n  useEffect(()=>{\n    fetch(\"/api/movies\")\n    .then(res => res.json())\n    .then(data =>{\n      setMovies(data)\n    })\n  },[])\n    \n  // Add Food \nconst AddMovie= (backgroundImg, cardImg, description, subTitle, title, titleImg, type ) =>{\n  fetch(\"/api/mo\", {\n      method: \"POST\",\n      headers: {\"Content-Type\":\"application/json\"},\n      body: JSON.stringify({backgroundImg, cardImg, description,  subTitle, title, titleImg, type })\n  })\n  .then((res)=>res.json())\n  .then((response)=>{\n      console.log(response)\n      if(response.error)\n      {\n          Swal.fire(\n              'Error',\n              response.error,\n              'error'\n            )\n      }\n      else if(response.success)\n      { \n          nav(\"/home\")\n          Swal.fire(\n              'Success',\n              response.success,\n              'success'\n            )\n            setonChange(!onChange)\n      }\n      else{\n          Swal.fire(\n              'Error',\n              \"Something went wrong\",\n              'error'\n            )\n      }\n\n  })\n}\n\n// Delete Food\nconst deleteMovie = (id) =>{\n  fetch(`/api/foods/${id}`, {\n   method: \"DELETE\",\n          })\n  .then((res)=>res.json())\n  .then((response)=>{\n        if(response.success)\n        {\n          nav(\"/home\")\n          Swal.fire(\n              'Success',\n              response.success,\n              'success'\n            )\n            setonChange(!onChange)\n        }\n        else{\n          Swal.fire(\n              'Error',\n              \"Something went wrong\",\n              'error'\n            )\n      }\n  })\n}\n  \n    const contextData = {\n      movies,\n      selectedMovies,\n      Addtowatchlist,\n      removefromwatchlist,\n      AddMovie,\n      deleteMovie,\n   \n    }\n  return (\n    <div>\n        <MovieContext.Provider value = {contextData} >\n            {children}\n        </MovieContext.Provider>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}