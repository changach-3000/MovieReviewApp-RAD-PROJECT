{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Development/mockproject/src/components/SingleMovie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SingleMovie(_ref) {\n  _s();\n  let {\n    AddtoWatchlist\n  } = _ref;\n  const [singlemovie, setSingleMovie] = useState(\" \");\n  const nav = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:3000/movies/${id}`).then(res => res.json()).then(data => {\n      setSingleMovie(data);\n    });\n  }, []);\n  const goBack = () => {\n    nav(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border bg-light overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goBack,\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: singlemovie.poster,\n          className: \"img-fluid \",\n          alt: \"image loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            textAlign: 'center',\n            fontWeight: 'bolder'\n          },\n          children: singlemovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bot-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: singlebot.health\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"icon lightning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 16\n            }, this), singlebot.damage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"icon shield\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 16\n            }, this), singlebot.armor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setArmyHandler(singlebot),\n          children: \"Add to Army\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, singlebot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(SingleMovie, \"YOLgqx1CC/52jlPH7NZkJBDG9YY=\", true);\n_c = SingleMovie;\nexport default SingleMovie;\nvar _c;\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SingleMovie","_ref","_s","AddtoWatchlist","singlemovie","setSingleMovie","nav","useNavigate","id","useParams","useEffect","fetch","then","res","json","data","goBack","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","poster","alt","style","textAlign","fontWeight","title","singlebot","health","class","damage","armor","setArmyHandler","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Development/mockproject/src/components/SingleMovie.jsx"],"sourcesContent":["import React,{useState} from 'react'\n\nfunction SingleMovie({AddtoWatchlist,}) {\n    const [singlemovie,setSingleMovie] =useState(\" \")\n\n    const nav = useNavigate()\n    const {id} = useParams()\n    useEffect(()=>{\n      fetch(`http://localhost:3000/movies/${id}`)\n      .then(res=>res.json())\n      .then(data=>{\n        setSingleMovie(data)     \n      })\n    }, [])\n    const goBack = () => {\n      nav(-1);}\n    \n  return (\n    <div>\n        {\n          <div key={singlebot.id} >\n            <div className='border bg-light overflow-hidden'  >\n            <button onClick={goBack}>Go back</button>\n            <img src={singlemovie.poster} className='img-fluid ' alt='image loading...'/>\n            <h5 style={{textAlign:'center',fontWeight:'bolder'}}>{singlemovie.title}</h5>\n            {/* style the bot details */}\n            <hr />\n            <div id=\"bot-details\">\n            <p>{singlebot.health}</p>\n            <p><i class=\"icon lightning\"></i>{singlebot.damage}</p>\n            <p><i class=\"icon shield\"></i>{singlebot.armor}</p>\n          </div>\n          <button onClick={() => setArmyHandler(singlebot)}>Add to Army</button>\n          \n          </div> \n          </div> \n         \n          }\n   </div>\n  )\n}\n\nexport default SingleMovie"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}